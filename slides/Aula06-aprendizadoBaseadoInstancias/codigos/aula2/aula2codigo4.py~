#
# Estimating Probabilities for an experiment
#
# The Maximum Likelihood Estimate is implemented by the 
# MLEProbDist class. The MLEProbDist construtor takes a
# frequency distribution, and creates the corresponding
# MLE probability distribution.
#

from nltk.token import *
from nltk.tokenizer import WhitespaceTokenizer
from nltk.probability import FreqDist
from nltk.probability import MLEProbDist
from nltk.draw.plot import Plot

freq_dist = FreqDist()
corpus = Token(TEXT=open('dados/may2001_pdf.torto').read())
WhitespaceTokenizer().tokenize(corpus)

for token in corpus['SUBTOKENS']:
	freq_dist.inc(token['TEXT'])

prob_dist = MLEProbDist(freq_dist)

# P(x) = freq(x)
prob_dist.prob('the')
freq_dist.freq('the')

#
# Estimating the probability distribution for roll2
#

import random
from nltk.token import *
from nltk.tokenizer import WhitespaceTokenizer
from nltk.probability import FreqDist
from nltk.probability import MLEProbDist

def roll2():
	return (random.choice([1,2,3,4,5,6])+ random.choice([1,2,3,4,5,6]))

# How often does each outcome of roll2 occur?
freq_dist = FreqDist()
for i in range(500):
	freq_dist.inc(roll2())

# Estimate the probability distribution of roll2
prob_dist = MLEProbDist(freq_dist)

# We can query the probability distribution to find 
# the probability for each outcome

for i in range(12):
	print prob_dist.prob(i)

for i in range(12):
	print freq_dist.freq(i)
